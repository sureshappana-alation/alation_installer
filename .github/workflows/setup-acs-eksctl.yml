name: "Setup ACS instance (Eksctl + unified installer)"

on:
  workflow_dispatch:
    inputs:
      # ALATION_VERSION:
      #   description: "Alation build version to install"
      #   required: true
      EKS_CLUSTER_NAME:
        description:
          "EKS Cluster Name. Set a unique cluster name to allow scoping hosts and Cluster Checks easily
          ## The name must be unique and must be dot-separated tokens with the following restrictions:
          ## * Lowercase letters, numbers, and hyphens only.
          ## * Must start with a letter.
          ## * Must end with a number or a letter.
          ## * Overall length should not be higher than 80 characters."
        required: true
      CONFIGURATION:
        description: "EKS Node configuration (valid values: 1 or 2. Default: 1)"
        required: false
        default: "1"
      EXISTING_CLUSTER:
        description: "Setup Alation on Existing Cluster (valid values: Yes or No). Default: creates the cluster first"
        required: false
        default: "No"
jobs:
  terraform:
    name: "setup"
    runs-on: ubuntu-latest
    env:
      DATADOG_DATADOG_APIKEY: ${{ secrets.DATADOG_DATADOG_APIKEY }}
      ACM_REGISTRY_REGISTRY: 248135293344.dkr.ecr.us-east-2.amazonaws.com
      ACM_REGISTRY_REPOSITORY: ocf-qa
      ACM_AWS_REGION: us-east-2
      ACM_AWS_AWS_ACCESS_KEY_ID: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
      ACM_AWS_AWS_SECRET_ACCESS_KEY: ${{ secrets.QA_AWS_SECRET_ACCESS_KEY }}
      ALATION_ANALYTICS_CATALOGIP: 127.0.0.1
      ALATION_ANALYTICS_POSTGRESPASSWORD: password@123
      DATADOG_DATADOG_CLUSTERNAME: ${{ github.event.inputs.EKS_CLUSTER_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.QA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      - name: Setup helm
        uses: azure/setup-helm@v1

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1

      - name: Eksctl setup
        if: ${{ github.event.inputs.EXISTING_CLUSTER == 'No' }}
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.67.0/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version

      - name: Generate eksctl config file
        if: ${{ github.event.inputs.EXISTING_CLUSTER == 'No' }}
        run: |
          export CLUSTERNAME=${{ github.event.inputs.EKS_CLUSTER_NAME }}
          if [[ ${{ github.event.inputs.CONFIGURATION }} == '2' ]]
          then
            envsubst < ${{ github.workspace }}/.github/templates/eksctl-config-2node.yaml.tmpl > ${{ github.workspace }}/.github/templates/eksctl-config.yaml
          else
            envsubst < ${{ github.workspace }}/.github/templates/eksctl-config-1node.yaml.tmpl > ${{ github.workspace }}/.github/templates/eksctl-config.yaml
          fi
          cat ${{ github.workspace }}/.github/templates/eksctl-config.yaml

      - name: Create cluster
        if: ${{ github.event.inputs.EXISTING_CLUSTER == 'No' }}
        run: |
          eksctl create cluster -f ${{ github.workspace }}/.github/templates/eksctl-config.yaml

      - name: Get kubectx
        if: ${{ github.event.inputs.EXISTING_CLUSTER != 'No' }}
        run: aws eks --region us-east-2 update-kubeconfig --name ${{ github.event.inputs.EKS_CLUSTER_NAME }}

      - name: Get Alation installer
        run: |
          aws s3 cp s3://unified-installer-build-pipeline-release/1/0/0/187/1.0.0.187.tar.gz .
          cd 1.0.0.187
          chmod +x installer
          ./installer -platform=eks

      - name: Run the configure scripts
        run: |
          chmod +x ${{ github.workspace }}/.github/scripts/alationconf_setup.sh
          ${{ github.workspace }}/.github/scripts/alationconf_setup.sh
        env:
          cluster: ${{ github.event.inputs.EKS_CLUSTER_NAME }}
