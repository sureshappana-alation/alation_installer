name: unified-installer-build-pipeline

on:
  # Run the job when pull request closed
  # This job will only run if the PR has been merged.
  # This is commented for now to trigger the job manually only
  pull_request:
  push:
    branches:
      - master
  # This section is to trigger the workflow manually
  workflow_dispatch:
    inputs:
      alation-analytics:
        description: "Alation Analytics(alation-analytics) version"
        required: false
      alationfc:
        description: "Alation Fat Container (alationfc) version"
        required: false
      acm:
        description: "ACM (acm) version"
        required: false
      EXCLUDE_MODULES:
        description: "List of comma separated modules to be excluded(ex: alation-analytics,alationfc,acm etc)"
        required: false

jobs:
  # Build job builds the installer go module which generates and exports go binary
  build:
    runs-on: ubuntu-latest
    # This job will only run if the PR has been merged.
    # if: ${{ (github.event.action == 'closed' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch' }}
    env:
      EVENT: ${{ toJSON(github.event) }}
      ACTION: ${{ github.event.action }}
      MERGED: ${{ github.event.merged }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Verify installer binary exists in cache
        id: cache-installer
        uses: actions/cache@v2
        with:
          path: |
            ./out/installer
          key: ${{ runner.os }}-${{ hashFiles('installer/src') }}-${{ hashFiles('installer/go.*') }}

      - name: Cache not found, Setting Docker Buildx
        if: steps.cache-installer.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v1

      - name: Building installer binary
        id: docker_build
        if: steps.cache-installer.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./installer
          push: false
          tags: alation/installer:latest
          outputs: type=local,dest=./out
          cache-from: |
            user/app:cache
            type=local,src=./docker-cache

      - name: Print list of files in ./out directory
        run: find ./out

      - name: Upload installer binary for package job
        uses: actions/upload-artifact@v2
        with:
          name: installer-binary
          path: ./out/installer
          retention-days: 1

  # This job is for creating alation unified installer build
  app-setup:
    runs-on: ubuntu-latest
    needs: build
    env:
      ECR_URL: 248135293344.dkr.ecr.us-east-2.amazonaws.com
      S3_RELEASE_BUCKET_URL: "s3://${{ secrets.S3_RELEASE_BUCKET_NAME }}"
      BASE_DIR: ./alation
      RESOURCE_DIR: ./alation/res
      MODULES_DIR: ./alation/res/modules
      VERSIONS_FILE: ./alation/versions.txt
      INSTALL_CONFIG_FILE: ./alation/alation-install.yaml
      INPUT_CONTEXT: ${{ toJSON(github.event.inputs) }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.0

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Make workflow scripts executable
        run: chmod +x ${{ github.workspace }}/.github/scripts/*.sh

      - name: Bootstrap environment
        run: ${{ github.workspace }}/.github/scripts/setup.sh

      - name: Get module versions from ./versions/*.json and apply overrides
        id: read_env
        run: ${{ github.workspace }}/.github/scripts/get-module-versions.sh

      - name: Download modules helm charts from helm registry
        run: ${{ github.workspace }}/.github/scripts/download-helm-charts.sh
        env:
          modules: ${{ steps.read_env.outputs.modules }}

      - name: Generate alation-install.yaml file
        run: ${{ github.workspace }}/.github/scripts/generate-alation-install-yaml.sh

      - name: Download installer binary from build job
        uses: actions/download-artifact@v2
        with:
          name: installer-binary
          path: ${{ env.BASE_DIR }}

      - name: Print list of files
        run: |
          echo "List of files"
          find ${{ env.BASE_DIR }}

      - name: Renaming base directory to alation version
        run: mv ${{ env.BASE_DIR }} ${{ env.BUILD_VERSION }}

      - name: Compress the final bundle
        run: tar -cvzf ${{ env.BUILD_OUTPUT }} ${{ env.BUILD_VERSION }}

      - name: Upload the compressed build to S3
        run: |
          aws s3 cp ${{ env.BUILD_OUTPUT }} ${{ env.S3_RELEASE_BUCKET_URL }}/$MAJOR/$MINOR/$PATCH/$GITHUB_RUN_NUMBER/${{ env.BUILD_OUTPUT }}

      - name: Tag git
        if: github.ref == 'refs/heads/master'
        run: |
          git tag $BUILD_VERSION
          git push origin $BUILD_VERSION
