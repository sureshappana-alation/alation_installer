name: Publish Docker images

on:
  workflow_dispatch:
    inputs:
      ALATION_VERSION:
        description: "Alation Build version"
        required: false

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      ECR_SRC_ACCESS_KEY_ID: ${{ secrets.ECR_SRC_ACCESS_KEY_ID }}
      ECR_SRC_SECRET_ACCESS_KEY: ${{ secrets.ECR_SRC_SECRET_ACCESS_KEY }}
      ECR_DEST_ACCESS_KEY_ID: ${{ secrets.ECR_DEST_ACCESS_KEY_ID }}
      ECR_DEST_SECRET_ACCESS_KEY: ${{ secrets.ECR_DEST_SECRET_ACCESS_KEY }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.ECR_SRC_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.ECR_SRC_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr1
        uses: aws-actions/amazon-ecr-login@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.ECR_DEST_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.ECR_DEST_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr2
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push, tag and pull images
        run: |
          array=("model-server/sentence-bert-encoder:0.2.0-1830545655" \
          "model-server/universal-sentence-encoder:0.2.0-1830545655" \
          "model-server:0.2.0-1830545655")

          for image in “${array[@]}”
          do
            echo "*********[$image]: Processing started*********"
            echo "[$image]: Pulling image from source ECR repo"
            docker pull $SRC_ECR_URL/$image
            echo "[$image]: Tagging image with destination ECR repo"
            docker tag $SRC_ECR_URL/$image $DEST_ECR_URL/$image
            echo "[$image]: Pushing image to destination ECR repo"
            docker push $DEST_ECR_URL/$image
            echo "*********[$image]: Processing completed*********\n\n"	
          done
